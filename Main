package com.company;

/*
Project: Lab 9
Purpose Details: Pizza ordering application
Course: IST 242
Author: Christian Lemmo
Date Developed: 3/17/2019
Last Date Changed: 3/26/19
Rev: 6
 */
//fix delivery options, create discount class, and then also figure out how to match user input to make sure it matches with menu items

import java.util.ArrayList;
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {

        System.out.println("Welcome to Fratellos Pizza Shop");
        System.out.println(" ____                   \n" +
                "/    \\\t\t\t\n" +
                "  u  u|      _______    \n" +
                "    \\ |  .-''#%&#&%#``-.   \n" +
                "   = /  ((%&#&#&%&VK&%&))  \n" +
                "    |    `-._#%&##&%_.-'   \n" +
                " /\\/\\`--.   `-.\"\".-'\n" +
                " |  |    \\   /`./          \n" +
                " |\\/|  \\  `-'  /\n" +
                " || |   \\     /            ");

        final char EXIT_CODE = 'E';
        final char CUST_CODE = 'C';
        final char MENU_CODE = 'M';
        final char ORDE_CODE = 'O';
        final char TRAN_CODE = 'T';
        final char HELP_CODE = '?';
        final char DELV_CODE = 'D';
        char userAction;
        System.out.println("Look at the menu options below");
        final String PROMPT_ACTION = "Add 'C'ustomer, List 'M'enu, Add 'O'rder, List 'T'ransaction, List 'D'elivery or 'E'xit: ";
        ArrayList<Customer> cList = new ArrayList<>();
        ArrayList<Menu> mList = new ArrayList<>();
        ArrayList<Order> oList = new ArrayList<>();
        ArrayList<Transaction> tList = new ArrayList<>();





        Menu menu1 = new Menu(1, "Plain", 8.75);
        Menu menu2 = new Menu(2, "Meat", 9.75);
        Menu menu3 = new Menu(3, "Extra", 8.75);
        Menu menu4 = new Menu(4, "Veg", 9.75);

        mList.add(menu1);
        mList.add(menu2);
        mList.add(menu3);
        mList.add(menu4);


        userAction = getAction(PROMPT_ACTION);

        while (userAction != EXIT_CODE) {
            switch(userAction) {
                case CUST_CODE:
                    Customer.listCustomer(cList);//addCustomer();
                    Scanner custName = new Scanner(System.in);
                    System.out.println("Please enter (customer's) name");
                    String customer1 = custName.next();
                    Scanner custPhone = new Scanner(System.in);
                    System.out.println("Please enter (customer's) phone number");
                    String custPhone1 = custPhone.next();
                    String number = custPhone1.replaceFirst("(\\d{3})(\\d{3})(\\d+)", "($1) $2-$3");
                    for (Order ord : oList) {
                        System.out.println("Order ID: " + ord.getorderId());
                    }
                    Customer cust1 = new Customer(customer1, number);
                    cList.add(cust1);
                    break;
                case MENU_CODE:
                    Menu.listMenu(mList);
                    break;
                case ORDE_CODE: //addOrders();
                    Scanner orderTime = new Scanner(System.in);
                    System.out.println("" +
                            "╔╗\n" +
                            "║║\n" +
                            "║║\n" +
                            "╚╝ Prices in menu are for small pizzas\n" +
                            "╔╗ Medium pizzas are subject to a $0.50 price increase\n" +
                            "╚╝ Large pizzas are subject to a $1.00 price increase\" ");
                    System.out.println("What would you like to order?");
                    String orderCust1 = orderTime.next().toLowerCase();
                    //if (!orderCust1.equals(mList.get(1).getmenuItem())) {
                     //   System.out.println("Retype order");
                     //   orderCust1 = orderTime.next().toLowerCase();
                    //} else {
                     //   continue;



                    //}

                     double price = mList.get(0).getMenuPrice();
                    System.out.print("How many pizzas would you like: ");
                    int pizzaCount = orderTime.nextInt();
                    price = price * pizzaCount;
                    System.out.println("Total: " + price);
                    Order order1 = new Order(orderCust1,price);
                    oList.add(order1);
                    //System.out.println("Would you like your food delivered?");
                    System.out.println("Delivery is 6% of total price");
                    String delvQues = orderTime.next().toLowerCase();
                    double delvCharge = 0.06;
                    double delvCharge1 = price * delvCharge;
                    double totalPrice = price + delvCharge1;
                    System.out.println("Total price is: " + totalPrice);


                    case TRAN_CODE : //listTransactions();
                    Scanner cshoCrd = new Scanner(System.in);
                    System.out.println("Cash or Credit?");
                    String paymentTpe = cshoCrd.next().toLowerCase();
                    if (paymentTpe == "cash"){
                        Transaction trans1 = new Transaction(PaymentType.cash);
                        tList.add(trans1);
                    }
                    else if (paymentTpe == "credit"){
                        Transaction trans1 = new Transaction(PaymentType.credit);
                        tList.add(trans1);
                    }
                    //else {(!paymentTpe.equals("cash") || !paymentTpe.equals("credit")){
                     //   System.out.println("Please retype the method of payment: ");
                      //  paymentTpe = cshoCrd.next().toLowerCase();
                    //} }
                    for (Transaction trans: tList) {
                        System.out.println("Transaction ID: " + trans.getTransactionId());
                        //System.out.println("Order:" + trans.getOrder());  //TODO: Print order
                        System.out.println("Payment Type: " + trans.getPaymentType());
                    }
                    break;





            }

            userAction = getAction(PROMPT_ACTION);
        }
    }
    public static char getAction(String prompt) {
        Scanner scnr = new Scanner(System.in);
        String answer = "";
        System.out.println(prompt);
        answer = scnr.nextLine().toUpperCase() + " ";
        char firstChar = answer.charAt(0);
        return firstChar;
    }
}
